services:
  redis:
    image: redis/redis-stack:latest
    container_name: carbon-redis-stack
    ports:
      - "6379:6379"  # Redis server
      - "8001:8001"  # RedisInsight UI
    volumes:
      - redis_data:/data
    networks:
      - carbon-network
    environment:
      - REDIS_ARGS=--appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: carbon-backend
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/__pycache__  # Exclude __pycache__ from volume mounting
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - REDIS_URL=redis://redis:6379/0
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - carbon-network
    depends_on:
      - redis
    dns:
      - 8.8.8.8
      - 8.8.4.4
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: carbon-frontend
    env_file:
      - ./frontend/.env
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Anonymous volume for node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm run dev -- --host 0.0.0.0
    networks:
      - carbon-network
    depends_on:
      - backend

networks:
  carbon-network:
    driver: bridge

volumes:
  redis_data:
